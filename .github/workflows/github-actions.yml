name: Topology definition CI

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  get_current_version:
    uses: cyberrangecz/actions-templates/.github/workflows/get_python_version.yml@ak/update-versioning
    with:
      file_path: "crczp/topology_definition/__init__.py"

  unitTests:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-24.04
    env:
      LC_ALL: C.UTF-8
      LANG: C.UTF-8
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Python Version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: install packages
        run: pip3 install pipenv

      - name: run pipenv
        run: |
          pipenv sync --dev
          pipenv run python -V
          pipenv run tox

  build:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-24.04
    needs: [get_current_version, unitTests]
    env:
      VERSION: ${{ needs.get_current_version.outputs.version }}
      PYTHON_TAG: py3
      ABI_TAG: none
      PLATFORM_TAG: any
      PACKAGE_EXTENSION: whl
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Python Version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Set Package Version
        run: python3 setup.py setopt --command=metadata --option=version --set-value=$VERSION

      - name: Build Wheel Package
        run: |
          export WHEEL_NAME=$(python3 setup.py --name | tr '-' '_')
          export PACKAGE=$WHEEL_NAME-$VERSION-${PYTHON_TAG}-${ABI_TAG}-${PLATFORM_TAG}.${PACKAGE_EXTENSION}
          python3 setup.py bdist_wheel

      - name: Publish to Pypi
        if: github.ref == 'refs/heads/master'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m twine upload dist/*

  create_tag:
    if: github.event.pull_request.base.ref == 'master'
    needs: get_current_version
    uses: cyberrangecz/actions-templates/.github/workflows/tag_template.yml@master
    with:
      VERSION: ${{ needs.get_current_version.outputs.version }}
